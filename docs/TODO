todo:
* Add sensible record updating API
* Passive observation of failures
* support for special domain PTR records based on local IP subnet address
* add subtype browsing
* add wide area support (i.e. DNS-SD over unicast DNS) 
* remove queries from queue if the browse object they very issued from is destroyed
* Changes resulting in updated RFC of 7th June 2005:
  * Defer responses to replies with TC bit set by 400-500msec
  * Defer unicast responses the same way as multicast responses 

done:
* drop glib from avahi-daemon
* doxygen updates
* deal with no local interface
* Probing/Conflict resolution
* uniqueness
* respect escaping in name serialization
* really send goodbye packets
* refresh subscribed records only
* FLX_DNS_TYPE_ANY support
* Known-Answer suppression client part
* Known-Answer suppression server part
* make flx_server_add_text() and flx_server_add_service() variadic functions
* name compression
* remove expression "rrset" from source files
* defend our entries on incoming goodbye
* allow NULL bytes in TXT records
* add flx_server_add_service_strlst() and friends
* change flx_* to avahi_*
* Unicast responses/queries
* Legacy unicast
* no flush bit in known answer
* always set AA
* check: TC bit is valid for queries ONLY
* add SRV and TXT records referenced from PTR records automatically to packet
* add A and AAAA records referenced from SRV records automatically to packet
* support known answer suppresion for incoming unicast queries
* check wether RRsets are supported correctly (i.e. that all records of an
  RRset are really sent if it is requested) (rfc 2181)
* case insensitve comparison
* drop records from cache only one second after flush cache bit entry was received
* either send entire RRSET or don't set flush cache bit!
* mantain flush cache bit correctly in psched
* Return to probing state on conflict
* response job dependencies
* enlarge packet in case a record/query is too large to fit in a normal packet
* reflector
* test against apple test suite
* sensible logging
* c++ support
* drop trailing dot on avahi_normalize_name()
* add entry_group::reset()
* add internal error codes
* finish DBUS stuff: allow NUL bytes in TXT records
* allow srv port == 0
* avahi-client:
   * service resolving
   * examples
* publish IP addresses with scope "link" only, unless ther are the only one the interface
* release 0.2!
* add identical service detection cookie
* add API to detect if a service is local
